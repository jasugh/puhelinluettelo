{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchName","handleNameSearch","value","onChange","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","type","Person","person","deletePerson","key","id","name","number","onClick","Persons","persons","personsToShow","filter","toLowerCase","includes","map","baseUrl","axios","get","then","response","data","delete","newObject","post","put","Notification","message","messageClass","className","App","useState","setPersons","setNewName","setNewNumber","setSearchName","setMessage","setMessageClass","useEffect","personService","initialPersons","event","target","preventDefault","personObject","i","p","indexOf","window","confirm","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"+NAceA,EAZA,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,iBACzB,OACI,iDAEI,2BACIC,MAAOF,EACPG,SAAUF,MCuBXG,EA7BI,SAAC,GAA6E,IAA5EC,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,mBAAoBC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBACpE,OACI,0BACIC,SAAUL,GAEV,6BACI,qCAEI,2BACIH,MAAOI,EACPH,SAAUI,KALtB,UASI,2BACIL,MAAOM,EACPL,SAAUM,KAGlB,6BACI,4BACIE,KAAK,UADT,UCIDC,G,KAvBA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAErB,OACI,6BACI,wBAAIC,IAAKF,EAAOG,IACZ,4BACKH,EAAOI,MAEZ,4BACKJ,EAAOK,QAEZ,4BACI,4BACIC,QAASL,GADb,eCMLM,EAjBC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAASrB,EAA8B,EAA9BA,WAAYc,EAAkB,EAAlBA,aAC7BQ,EAAgBD,EAAQE,QAAO,SAAAV,GAAM,OAAIA,EAAOI,KAAKO,cAAcC,SAASzB,EAAWwB,kBAS7F,OACI,6BAReF,EAAcI,KAAI,SAACb,GAAD,OACjC,kBAAC,EAAD,CACIE,IAAKF,EAAOG,GACZH,OAAQA,EACRC,aAAc,kBAAMA,EAAaD,W,gBCRvCc,EAAU,uDAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAChB,GAEZ,OADgBY,IAAMK,OAAN,UAAgBN,EAAhB,YAA2BX,IAC5Bc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAE,GAEX,OADgBN,IAAMO,KAAKR,EAASO,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAAChB,EAAIkB,GAEhB,OADgBN,IAAMQ,IAAN,UAAaT,EAAb,YAAwBX,GAAMkB,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCR9BK,EAZM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC7B,OAAgB,OAAZD,EACO,KAIP,yBAAKE,UAAWD,GACXD,IC4HEG,EA9HH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPrB,EADO,KACEsB,EADF,OAEgBD,mBAAS,IAFzB,mBAEPpC,EAFO,KAEEsC,EAFF,OAGoBF,mBAAS,IAH7B,mBAGPlC,EAHO,KAGIqC,EAHJ,OAIsBH,mBAAS,IAJ/B,mBAIP1C,EAJO,KAIK8C,EAJL,OAKgBJ,mBAAS,MALzB,mBAKPJ,EALO,KAKES,EALF,OAM0BL,mBAASJ,GANnC,mBAMPC,EANO,KAMOS,EANP,KAQdC,qBAAU,WACNC,IAEKpB,MAAK,SAAAqB,GAAc,OAAIR,EAAWQ,QACxC,IAsFH,OACI,6BACI,yCAEA,kBAAC,EAAD,CAAcb,QAASA,EAASC,aAAcA,IAE9C,kBAAC,EAAD,CACIvC,WAAYA,EACZC,iBApFa,SAACmD,GACtBN,EAAcM,EAAMC,OAAOnD,UAqFvB,yCACA,kBAAC,EAAD,CACIG,UApFM,SAAC+C,GACfA,EAAME,iBAGN,IAAMC,EAAe,CACjBtC,KAAMX,EACNY,OAAQV,GAGNgD,EAAInC,EAAQK,KAAI,SAAA+B,GAAC,OAAIA,EAAExC,QAAMyC,QAAQpD,GAEvCkD,GAAK,EACDG,OAAOC,QAAP,UAAkBtD,EAAlB,6EACA4C,EACY7B,EAAQmC,GAAGxC,GAAIuC,GACtBzB,MAAK,SAAAE,GACFe,EAAW,mBAAD,OACaf,EAAKf,KADlB,aAGV+B,EAAgB,WAChBa,YAAW,WACPd,EAAW,QACZ,KACHJ,EAAWtB,EAAQK,KAAI,SAAAb,GAAM,OAAIA,EAAOG,KAAOgB,EAAKhB,GAAKH,EAASmB,MAClEY,EAAW,IACXC,EAAa,OAEhBiB,OAAM,SAAAC,GACHhB,EAAW,kBAAD,OACYzC,EADZ,0CAGV0C,EAAgB,SAChBa,YAAW,WACPd,EAAW,QACZ,QAMnBG,EACYK,GACPzB,MAAK,SAAAE,GACFe,EAAW,SAAD,OACGf,EAAKf,OAElB+B,EAAgB,WAChBa,YAAW,WACPd,EAAW,QACZ,KACHJ,EAAWtB,EAAQ2C,OAAOhC,IAC1BY,EAAW,IACXC,EAAa,QAiCbvC,QAASA,EACTC,mBAlGe,SAAC6C,GACxBR,EAAWQ,EAAMC,OAAOnD,QAkGhBM,UAAWA,EACXC,mBAhGe,SAAC2C,GACxBP,EAAaO,EAAMC,OAAOnD,UAiGtB,uCACA,kBAAC,EAAD,CACImB,QAASA,EACTrB,WAAYA,EACZc,aAtCS,SAACD,GACd8C,OAAOC,QAAQ,UAAY/C,EAAOI,OAClCiC,EAAqBrC,EAAOG,IACvBc,MAAK,SAAAE,GACFe,EAAW,WAAD,OACKlC,EAAOI,OAEtB+B,EAAgB,WAChBa,YAAW,WACPd,EAAW,QACZ,KACHJ,EAAWtB,EAAQE,QAAO,SAAAkC,GAAC,OAAIA,EAAEzC,KAAOH,EAAOG,e,MC/FnEiD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f6b1e48f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchName, handleNameSearch}) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input\r\n                value={searchName}\r\n                onChange={handleNameSearch}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, handlePersonChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form\r\n            onSubmit={addPerson}\r\n        >\r\n            <div>\r\n                <div>\r\n                    name:\r\n                    <input\r\n                        value={newName}\r\n                        onChange={handlePersonChange}\r\n                    />\r\n                </div>\r\n                number:\r\n                <input\r\n                    value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button\r\n                    type=\"submit\"\r\n                >\r\n                    add\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nexport default PersonForm","import React from 'react'\r\nimport './Persons.css'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n\r\n    return (\r\n        <div>\r\n            <ul key={person.id}>\r\n                <li>\r\n                    {person.name}\r\n                </li>\r\n                <li>\r\n                    {person.number}\r\n                </li>\r\n                <li>\r\n                    <button\r\n                        onClick={deletePerson}\r\n                    >\r\n                        delete\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Person","import React from 'react'\r\nimport './Persons.css'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, searchName, deletePerson}) => {\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()));\r\n\r\n    const rows = () => personsToShow.map((person) =>\r\n        <Person\r\n            key={person.id}\r\n            person={person}\r\n            deletePerson={() => deletePerson(person)}\r\n        />\r\n    );\r\n    return (\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Persons\r\n\r\n\r\n","import axios from 'axios'\r\n\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = 'https://puhelinluettelo-bf.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nexport default {getAll, remove, create, update}\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, messageClass }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from './services/persons'\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [searchName, setSearchName] = useState('');\n    const [message, setMessage] = useState(null);\n    const [messageClass, setMessageClass] = useState(message);\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => setPersons(initialPersons))\n    }, []);\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    };\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    };\n\n    const handleNameSearch = (event) => {\n        setSearchName(event.target.value);\n    };\n\n    const addPerson = (event) => {\n        event.preventDefault();\n\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        };\n\n        const i = persons.map(p => p.name).indexOf(newName);\n\n        if (i > -1) {\n            if (window.confirm(`${newName} is already added to phone book, replace the old number with a new one?`)) {\n                personService\n                    .update(persons[i].id, personObject)\n                    .then(data => {\n                        setMessage(\n                            `Phone number of ${data.name} changed`\n                        );\n                        setMessageClass('message');\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000);\n                        setPersons(persons.map(person => person.id !== data.id ? person : data));\n                        setNewName('');\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        setMessage(\n                            `Information of ${newName} has already been removed from server`\n                        );\n                        setMessageClass('error');\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000);\n                    })\n            }\n            return;\n        }\n\n        personService\n            .create(personObject)\n            .then(data => {\n                setMessage(\n                    `Added ${data.name}`\n                );\n                setMessageClass('message');\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000);\n                setPersons(persons.concat(data));\n                setNewName('');\n                setNewNumber('')\n            })\n    };\n\n    const deletePerson = (person) => {\n        if (window.confirm('Delete ' + person.name)) {\n            personService.remove(person.id)\n                .then(data => {\n                    setMessage(\n                        `Deleted ${person.name}`\n                    );\n                    setMessageClass('message');\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000);\n                    setPersons(persons.filter(p => p.id !== person.id))\n                });\n        }\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification message={message} messageClass={messageClass}/>\n\n            <Filter\n                searchName={searchName}\n                handleNameSearch={handleNameSearch}\n            />\n            <h3>Add a New</h3>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                handlePersonChange={handlePersonChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons\n                persons={persons}\n                searchName={searchName}\n                deletePerson={deletePerson}\n            />\n        </div>\n    )\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}